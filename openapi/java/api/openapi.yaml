openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
servers:
- url: /
paths:
  /:
    get:
      operationId: get_top__get
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Successful Response
      summary: Get Top
      x-accepts: text/plain
  /token:
    post:
      operationId: login_for_access_token_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_for_access_token_token_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login For Access Token
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /items:
    get:
      operationId: get_item_items_get
      responses:
        "200":
          content:
            application/json: {}
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Get Item
      x-accepts: application/json
    post:
      operationId: post_item_items_post
      responses:
        "200":
          content:
            application/json: {}
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Post Item
      x-accepts: application/json
  /items/{item_id}:
    delete:
      operationId: delete_item_items__item_id__delete
      parameters:
      - explode: false
        in: path
        name: item_id
        required: true
        schema:
          title: Item Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Delete Item
      x-accepts: application/json
    get:
      operationId: get_items_items__item_id__get
      parameters:
      - explode: false
        in: path
        name: item_id
        required: true
        schema:
          title: Item Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Get Items
      x-accepts: application/json
    post:
      operationId: post_items_items__item_id__post
      parameters:
      - explode: false
        in: path
        name: item_id
        required: true
        schema:
          title: Item Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Post Items
      x-accepts: application/json
    put:
      operationId: put_item_items__item_id__put
      parameters:
      - explode: false
        in: path
        name: item_id
        required: true
        schema:
          title: Item Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: Put Item
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Body_login_for_access_token_token_post:
      properties:
        grant_type:
          nullable: true
          pattern: password
          type: string
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ""
          title: Scope
          type: string
        client_id:
          nullable: true
          type: string
        client_secret:
          nullable: true
          type: string
      required:
      - password
      - username
      title: Body_login_for_access_token_token_post
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    Item:
      example:
        name: name
        id: 0
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
      required:
      - id
      - name
      title: Item
    Token:
      example:
        access_token: access_token
        token_type: token_type
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - access_token
      - token_type
      title: Token
    ValidationError:
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: token
      type: oauth2

