/*
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.Item;
import org.openapitools.client.model.Token;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Delete Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemItemsItemIdDeleteTest() throws ApiException {
        String itemId = null;
        api.deleteItemItemsItemIdDelete(itemId);
        // TODO: test validations
    }

    /**
     * Get Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemItemsGetTest() throws ApiException {
        api.getItemItemsGet();
        // TODO: test validations
    }

    /**
     * Get Items
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemsItemsItemIdGetTest() throws ApiException {
        String itemId = null;
        Item response = api.getItemsItemsItemIdGet(itemId);
        // TODO: test validations
    }

    /**
     * Get Top
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTopGetTest() throws ApiException {
        String response = api.getTopGet();
        // TODO: test validations
    }

    /**
     * Login For Access Token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginForAccessTokenTokenPostTest() throws ApiException {
        String username = null;
        String password = null;
        String grantType = null;
        String scope = null;
        String clientId = null;
        String clientSecret = null;
        Token response = api.loginForAccessTokenTokenPost(username, password, grantType, scope, clientId, clientSecret);
        // TODO: test validations
    }

    /**
     * Post Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postItemItemsPostTest() throws ApiException {
        api.postItemItemsPost();
        // TODO: test validations
    }

    /**
     * Post Items
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postItemsItemsItemIdPostTest() throws ApiException {
        String itemId = null;
        Item response = api.postItemsItemsItemIdPost(itemId);
        // TODO: test validations
    }

    /**
     * Put Item
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putItemItemsItemIdPutTest() throws ApiException {
        String itemId = null;
        Item item = null;
        Item response = api.putItemItemsItemIdPut(itemId, item);
        // TODO: test validations
    }

}
